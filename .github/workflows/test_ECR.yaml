name: test_ECR

on:
  push:
    branches:
      - '3-aws-deployment'

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          # role-duration-seconds: 1200
          # role-session-name: MySessionName

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: e-commerce-api
          IMAGE_TAG: latest
          GO111MODULE: on
          CGO_ENABLED: 0
          GOOS: linux
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG